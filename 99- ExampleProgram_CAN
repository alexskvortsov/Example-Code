/* ---------------------------------------------------------------------------*/
/* --------------------
 * Company             : MyCompany
 * --------------------
 * Project Name        : CAN1CAN2
 * Description         : Stm32F764_CAN
 * --------------------
 * Tool Versions       : uVision V5.17.0.0
 * Target Device       : STM32F764IGT6
 * --------------------
 * Engineer            : AlexSkvortsov
 * Revision            : 1.0
 * Created Date        : 2019.03.11
 * --------------------
 * Engineer            : 
 * Revision            : 
 * Modified Date       : 2019.03.15
 * --------------------
 * Additional Comments : ....
 * --------------------
 *--------------------------------------------------------------------------- */


/* --------------------------------------------------------------------------- */
/* Includes ------------------------------------------------------------------ */
/* --------------------------------------------------------------------------- */
#include "stm32f7xx_hal.h"
#include "can.h"
#include "usart.h"
#include "gpio.h"



/* --------------------------------------------------------------------------- */
/* Private variables---------------------------------------------------------- */
/* --------------------------------------------------------------------------- */
CAN_FilterConfTypeDef  	      sFilterConfig;
static CanTxMsgTypeDef        TxMessage;
s
tatic CanRxMsgTypeDef        RxMessage;



/*
 * --------------------
 * Engineer 		: AlexSkvortsov
 * --------------------
 * Modified Date	: 2019.03.12
 * --------------------
*/
/* --------------------------------------------------------------------------- */
/* Exported types ------------------------------------------------------------ */
/* --------------------------------------------------------------------------- */
CAN_HandleTypeDef hcan1;
CAN_HandleTypeDef hcan2;



/* --------------------------------------------------------------------------- */
/* Private function prototypes ----------------------------------------------- */
/* --------------------------------------------------------------------------- */
void SystemClock_Config(void);
void MX_CAN1_Init(void);
void MX_CAN2_Init(void);
static void Error_Handler(void);



/*
 * --------------------
 * Engineer 		: AlexSkvortsov
 * --------------------
 * Modified Date	: 2019.03.12
 * --------------------
*/

/* --------------------------------------------------------------------------- */
/* MAIN PROGRAM -------------------------------------------------------------- */
/* --------------------------------------------------------------------------- */
int main(void)
{
  /* MCU Configuration----------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();

  /* Configure the system clock */
  SystemClock_Config();

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
  MX_CAN1_Init();
  MX_CAN2_Init();
  MX_USART1_UART_Init();

  /* Main st */
  hcan2.pTxMsg = &TxMessage;
  hcan1.pRxMsg = &RxMessage;
	
  /* Start Main Program */
  /* Send str in COM_Port */
  printf("**** This is CAN test ****\r\n\r\n");
	
	/*##-1- Configure CAN2 Transmission Massage #####################################*/
	hcan2.pTxMsg->StdId = 0x123;
	hcan2.pTxMsg->RTR = CAN_RTR_DATA;
	hcan2.pTxMsg->IDE = CAN_ID_STD;
	hcan2.pTxMsg->DLC = 8;
	hcan2.pTxMsg->Data[0] = 0x55;
	hcan2.pTxMsg->Data[1] = 0xAA;
	hcan2.pTxMsg->Data[2] = 0xBB;
	hcan2.pTxMsg->Data[3] = 0xCC;
	hcan2.pTxMsg->Data[4] = 0xDD;
	hcan2.pTxMsg->Data[5] = 0xEE;
	hcan2.pTxMsg->Data[6] = 0xFF;
	hcan2.pTxMsg->Data[7] = 0x88;
	
  	/*##-2- Configure the CAN1 Filter ###########################################*/
  	sFilterConfig.FilterNumber = 0;
  	sFilterConfig.FilterMode = CAN_FILTERMODE_IDMASK;
  	sFilterConfig.FilterScale = CAN_FILTERSCALE_32BIT;
  	sFilterConfig.FilterIdHigh = 0x0000;
  	sFilterConfig.FilterIdLow = 0x0000;
  	sFilterConfig.FilterMaskIdHigh = 0x0000;
  	sFilterConfig.FilterMaskIdLow = 0x0000;
  	sFilterConfig.FilterFIFOAssignment = 0;
  	sFilterConfig.FilterActivation = ENABLE;
  	sFilterConfig.BankNumber = 14;
	
  	HAL_CAN_ConfigFilter(&hcan1, &sFilterConfig);       //main_can_config


  /* Infinite loop */
  while (1)
  {
  
		/*##-3- Start the CAN2 Transmission process #####################################*/
		if(HAL_CAN_Transmit(&hcan2, 10) != HAL_OK)
		{Error_Handler();} 					                        /* Transmition Error */

		if(HAL_CAN_GetState(&hcan2) != HAL_CAN_STATE_READY)
		{Error_Handler();}

		/*##-4- Start the CAN1 Reception process ########################################*/
		if(HAL_CAN_Receive(&hcan1, CAN_FIFO0,10) != HAL_OK)
		{Error_Handler();}					                        /* Reception Error */	

		if(HAL_CAN_GetState(&hcan1) != HAL_CAN_STATE_READY)
		{Error_Handler();} 					                        /* State Error */


		/* Print result str in COM_Port */
		printf("StdId : %x\r\n",hcan1.pRxMsg->StdId);
		printf("RxMsg : %s",hcan1.pRxMsg->Data);
		printf("\r\n");		
		
		HAL_Delay(1000); //tick
  }
}



/* --------------------------------------------------------------------------- */
/* Used Function ------------------------------------------------------------- */
/* --------------------------------------------------------------------------- */

/* System Clock Configuration */
void SystemClock_Config(void)
{

  RCC_OscInitTypeDef RCC_OscInitStruct;
  RCC_ClkInitTypeDef RCC_ClkInitStruct;
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;

  __PWR_CLK_ENABLE();

  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);

  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  RCC_OscInitStruct.PLL.PLLM = 8;
  RCC_OscInitStruct.PLL.PLLN = 400;
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  RCC_OscInitStruct.PLL.PLLQ = 2;
  HAL_RCC_OscConfig(&RCC_OscInitStruct);

  HAL_PWREx_ActivateOverDrive();

  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
  HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6);

  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
  PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
  HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);

  HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);

  HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);

  /* SysTick_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
}




/*
 * --------------------
 * Engineer 		: AlexSkvortsov
 * --------------------
 * Modified Date	: 2019.03.14
 * --------------------
*/
/* CAN1 init function */
void MX_CAN1_Init(void)
{

  hcan1.Instance = CAN1;
  hcan1.Init.Prescaler = 16;
  hcan1.Init.Mode = CAN_MODE_NORMAL;
  hcan1.Init.SJW = CAN_SJW_1TQ;
  hcan1.Init.BS1 = CAN_BS1_6TQ;
  hcan1.Init.BS2 = CAN_BS2_8TQ;
  hcan1.Init.TTCM = DISABLE;
  hcan1.Init.ABOM = DISABLE;
  hcan1.Init.AWUM = DISABLE;
  hcan1.Init.NART = DISABLE;
  hcan1.Init.RFLM = DISABLE;
  hcan1.Init.TXFP = DISABLE;
  HAL_CAN_Init(&hcan1);
}




/*
 * --------------------
 * Engineer 		: AlexSkvortsov
 * --------------------
 * Modified Date	: 2019.03.14
 * --------------------
*/
/* CAN2 init function */
void MX_CAN2_Init(void)
{

  hcan2.Instance = CAN2;
  hcan2.Init.Prescaler = 16;
  hcan2.Init.Mode = CAN_MODE_NORMAL;
  hcan2.Init.SJW = CAN_SJW_1TQ;
  hcan2.Init.BS1 = CAN_BS1_6TQ;
  hcan2.Init.BS2 = CAN_BS2_8TQ;
  hcan2.Init.TTCM = DISABLE;
  hcan2.Init.ABOM = DISABLE;
  hcan2.Init.AWUM = DISABLE;
  hcan2.Init.NART = DISABLE;
  hcan2.Init.RFLM = DISABLE;
  hcan2.Init.TXFP = DISABLE;
  HAL_CAN_Init(&hcan2);
}


/* --------------------------------------------------------------------------- */
/* End Programm -------------------------------------------------------------- */
/* --------------------------------------------------------------------------- */

